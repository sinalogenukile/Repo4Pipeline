# Define the workflow name
name: CI/CD Pipeline

# Specify the events that trigger this workflow
on:
  push:
    branches:
      - main  # Trigger the workflow on push events to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests targeting the 'main' branch

jobs:
  # Define the 'build' job
  build:
    runs-on: ubuntu-latest  # Specifies the runner environment for this job

    steps:
      # Checkout the source code
      - name: Checkout code
        uses: actions/checkout@v2  # Action to check out the repository's code

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2  # Action to set up Node.js
        with:
          node-version: '18'  # Specifies the Node.js version to use

      # Install project dependencies
      - name: Install dependencies
        run: npm install  # Command to install Node.js dependencies

      # Build the project and generate artifacts
      - name: Build and Generate Artifacts
        run: |
          npm run build  # Command to build the project; replace with your build command

      # Archive build artifacts for use in subsequent jobs
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2  # Action to upload artifacts
        with:
          name: build-artifacts  # Name of the artifact
          path: path/to/your/artifacts  # Path to the build artifacts

  # Define the 'test' job
  test:
    runs-on: ubuntu-latest  # Specifies the runner environment for this job
    needs: build  # This job depends on the successful completion of the 'build' job

    steps:
      # Checkout the source code
      - name: Checkout code
        uses: actions/checkout@v2  # Action to check out the repository's code

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2  # Action to set up Node.js
        with:
          node-version: '18'  # Specifies the Node.js version to use

      # Install project dependencies
      - name: Install dependencies
        run: npm install  # Command to install Node.js dependencies

      # Run tests
      - name: Run tests
        run: npm test  # Command to run tests

      # Perform code analysis
      - name: Run code analysis
        run: npm run lint  # Command to perform code linting

      # Upload test results for later inspection
      - name: Upload test results
        uses: actions/upload-artifact@v2  # Action to upload artifacts
        with:
          name: test-results  # Name of the artifact
          path: path/to/your/test/results  # Path to the test results

  # Define the 'deploy' job
  deploy:
    runs-on: ubuntu-latest  # Specifies the runner environment for this job
    needs: test  # This job depends on the successful completion of the 'test' job

    steps:
      # Checkout the source code
      - name: Checkout code
        uses: actions/checkout@v2  # Action to check out the repository's code

      # Download build artifacts for deployment
      - name: Download build artifacts
        uses: actions/download-artifact@v2  # Action to download artifacts
        with:
          name: build-artifacts  # Name of the artifact to download

      # Deploy the application to staging
      - name: Deploy to staging
        env:
          DEPLOYMENT_ENV: ${{ secrets.DEPLOYMENT_ENV }}  # Deployment environment (from GitHub Secrets)
          API_KEY: ${{ secrets.API_KEY }}  # API key for deployment (from GitHub Secrets)
        run: |
          ./deploy.sh --env=$DEPLOYMENT_ENV --api-key=$API_KEY  # Command to run deployment script
